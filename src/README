By default, the program processes the main function and outputs 2 text files to /home/ directory.

The first file is "Pcodeouput_<function_name>". This file is made up of entries of pcode in execution order along with its input & output varnodes. 
Entries are formatted as such: "<output varnode> = <pcode> <input0 varnode> <input1 varnode> ....."

Each Varnode is represented by:
1. Address - This value can be a constant (1600), a register (RAX), or an interval with a symbolic value (RSP + 1[-8,-8]). 
    Constant value locations indicate that the varnode represents a temporary variable create by Ghidra, that does not exist on the function stack
    Register value locations indicate that the varnode represents a register
    Interval value locations with symbolic value indicate that the varnode might represent a stack variable located at a offset, 
    represented by the strided interval, from the symbolic value.

2. Value-Set - This value can be a strided interval (4[13,21]) that may or may not have a symbolic part (RSP)
    Strided intervals are made up of 3 values, a stride, lower bound and upper bound. It represents a set of values starting from the lower bound
    with increments of the stride until the upper bound. For example, 4[13,21] represents the values 13, 17, 21.
    
The second file is "VSAoutput_<function_name>". this file contains a json object representing the abstract domain of the function.
The json object is of the form: 
{<variable_addres> : {Value-set : <value-set>, Address : <address>}, ... , <variable_addres> : {Value-set : <value-set>, Address : <address>}}
    
NOTE: Although strided interval is used, the program only ever produces strided intervals of constant values e.g. 1[-8,-8]. 
This is because the program only processes integer-manipulating pcodes i.e. INT_ADD, INT_SUB, INT_NEGATE
